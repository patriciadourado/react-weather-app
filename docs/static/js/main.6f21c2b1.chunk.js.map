{"version":3,"sources":["components/Titles.js","components/Forms.js","components/Weather.js","components/LineChart.js","App.js","serviceWorker.js","index.js"],"names":["Titles","react_default","a","createElement","React","Component","Forms","onSubmit","this","props","getWeather","type","name","placeholder","Weather","className","city","country","temperature","humidity","description","error","LineChart","victory_chart","victory_label","text","x","y","textAnchor","transform","victory_axis","standalone","label","domain","dependentAxis","t_min","t_max","style","tickLabels","angle","victory_scatter","data","forecast","labels","_ref","datum","labelComponent","dy","size","scale","border","stroke","fontSize","victory_line","API_KEY","App","state","undefined","_callee","e","api_call_current","api_call_forecast","data_current","data_forecast","chart_data","i","regenerator_default","wrap","_context","prev","next","preventDefault","target","elements","value","fetch","concat","sent","json","list","length","push","parseFloat","main","temp","toFixed","reduce","min","b","Math","max","_this","setState","sys","weather","t0","console","log","stop","components_Titles","components_Forms","components_Weather","components_LineChart","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6f21c2b1.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass Titles extends React.Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h1>Weather Finder</h1>\r\n                <p>API from openweathermap.org</p>                \r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Titles;","/*\r\n    This form component has access getWeather method on App.js and get access through the inputs:\r\n    city and country of the object (data) from the API;\r\n*/\r\n\r\nimport React from \"react\";\r\n\r\nclass Forms extends React.Component{\r\n    render(){\r\n        return(\r\n            <form onSubmit={this.props.getWeather}>\r\n                <input type=\"text\" name=\"city\" placeholder=\"City\"/>\r\n                <input type=\"text\" name=\"country\" placeholder=\"Country (ex. BR)\"/>\r\n                <button>Know Weather</button>\r\n            </form>\r\n        );\r\n    }\r\n\r\n}\r\nexport default Forms;","/*\r\n    This component returns a table with all props from weather api:\r\n    location, city, country, temperature, description and also a message error;\r\n*/\r\nimport React from \"react\";\r\n\r\n\r\nclass Weather extends React.Component{\r\n    render(){\r\n        return(\r\n            <div className=\"info-weather\">\r\n\t\t\t\t<div className=\"table\">\r\n\t\t\t\t\t<table>\r\n\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<th>City</th>\r\n\t\t\t\t\t\t\t\t<th>Country</th>\r\n\t\t\t\t\t\t\t\t<th>Temperature</th>\r\n\t\t\t\t\t\t\t\t<th>Humidity</th>\r\n\t\t\t\t\t\t\t\t<th>Condition</th>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t{this.props.city && <td>{this.props.city}</td>}\r\n\t\t\t\t\t\t\t\t{this.props.country && <td>{this.props.country}</td>}\r\n\t\t\t\t\t\t\t\t{this.props.temperature && <td>{this.props.temperature} &#8451;</td>}\r\n\t\t\t\t\t\t\t\t{this.props.humidity && <td>{this.props.humidity}</td>}\r\n\t\t\t\t\t\t\t\t{this.props.description && <td>{this.props.description}</td>}\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n\t\t\t\t</div>\r\n                <div className=\"error-message\">\r\n                    {this.props.error && <p>{this.props.error}</p>}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Weather;\r\n\r\n","import React from \"react\";\r\nimport { VictoryChart,VictoryLine,VictoryScatter,VictoryAxis,VictoryLabel} from 'victory';\r\n\r\nclass LineChart extends React.Component{\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div className=\"container-chart\">\r\n\t\t\t\t<VictoryChart>\r\n\t\t\t\t\t<VictoryLabel text={this.props.city} x={225} y={10} textAnchor=\"middle\"/>\r\n\t\t\t\t\t<g transform={\"scale(1.0)\"}>\r\n\t\t\t\t\t\t<VictoryAxis \r\n\t\t\t\t\t\t\tstandalone={false} \r\n\t\t\t\t\t\t\tlabel=\"Sample\" \r\n\t\t\t\t\t\t\tdomain={{ x: [0,40]}}/>\r\n\t\t\t\t\t\t<VictoryAxis dependentAxis \r\n\t\t\t\t\t\t\tstandalone={false} \r\n\t\t\t\t\t\t\tdomain={{y: [this.props.t_min,this.props.t_max] }} \r\n\t\t\t\t\t\t\tlabel=\"Temperature\" \r\n\t\t\t\t\t\t\tstyle={{tickLabels: { angle: 90 }}}/>\r\n\t\t\t\t\t\t<VictoryScatter\r\n\t\t\t\t\t\t\tstandalone={false}\r\n\t\t\t\t\t\t\tdata = {this.props.forecast}\t\r\n\t\t\t\t\t\t\tlabels={({ datum }) => datum.y}\r\n\t\t\t\t\t\t\tlabelComponent={<VictoryLabel dy={8}/>}\r\n\t\t\t\t\t\t\tsize={1}\r\n\t\t\t\t\t\t\tscale={{x: \"linear\", y: \"linear\"}}\r\n\t\t\t\t\t\t\tstyle={{ border: { stroke: \"none\" }, labels: { fontSize: 6 } }}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</g>\r\n\t\t\t\t</VictoryChart>\r\n\t\t\t\t\t<VictoryChart>\r\n\t\t\t\t\t\t<VictoryLabel text={this.props.city} x={225} y={10} textAnchor=\"middle\" />\r\n\t\t\t\t\t\t<VictoryAxis \r\n\t\t\t\t\t\tstandalone={false} \r\n\t\t\t\t\t\tlabel=\"Sample\" \r\n\t\t\t\t\t\tdomain={{ x: [0,40]}}/>\r\n\t\t\t\t\t\t<VictoryLine data = {this.props.forecast}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t<VictoryAxis dependentAxis \r\n\t\t\t\t\t\tstandalone={false} \r\n\t\t\t\t\t\tdomain={{y: [this.props.t_min,this.props.t_max] }} \r\n\t\t\t\t\t\tlabel=\"Temperature\" \r\n\t\t\t\t\t\tstyle={{tickLabels: { angle: 90 }}}/>\r\n\t\t\t\t\t</VictoryChart>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\t\r\n}\r\n\r\nexport default LineChart;","import React from \"react\";\r\nimport Titles from \"./components/Titles\";\r\nimport Forms from \"./components/Forms\";\r\nimport Weather from \"./components/Weather\";\r\nimport LineChart from \"./components/LineChart\"\r\n\r\n//Sign up and Login to openweatherap.org and get your own API_KEY;\r\n\r\nconst API_KEY = \"01c331b462cd6dfb2abd515dffd14055\";\r\n\r\nclass App extends React.Component{\r\n  state = {\r\n    temperature: undefined,\r\n    city: undefined,\r\n    country: undefined,\r\n    humidity: undefined,\r\n    description: undefined,\r\n\tforecast: undefined,\r\n\tt_min: 0,\r\n\tt_max: 40,\r\n\terror: undefined\r\n  }\r\n  \r\n  getWeather = async(e) => {\r\n    try{\r\n      e.preventDefault();//Prevent default behavior (not refresh)\r\n      const city = e.target.elements.city.value;\r\n      const country = e.target.elements.country.value;\r\n      const api_call_current = await fetch(`https://cors-anywhere.herokuapp.com/http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&APPID=${API_KEY}&units=metric`);\r\n      const api_call_forecast = await fetch(`https://cors-anywhere.herokuapp.com/http://api.openweathermap.org/data/2.5/forecast?q=${city},${country}&APPID=${API_KEY}`);\t  \r\n\t\r\n\t  const data_current = await api_call_current.json();\r\n\t  const data_forecast = await api_call_forecast.json();\r\n\t  var chart_data = [];\r\n\t  var t_min,t_max;\r\n\t  \r\n      if(city && country){\r\n\t\tfor (var i = 0; i < data_forecast.list.length; i++) {\r\n\t\t\tchart_data.push({x:i+1,y:parseFloat((data_forecast.list[i].main.temp-273).toFixed(2))});//transform to celcius w/ 2 precision digits\r\n\t\t}\r\n\t\t//find the minimum and maximum values of temperature to build y scale chart\r\n\t\tt_min = chart_data.reduce((min, b) => Math.min(min, b.y), chart_data[0].y);\r\n\t\tt_max = chart_data.reduce((max, b) => Math.max(max, b.y), chart_data[0].y);\r\n\t\t\r\n\t\tthis.setState({\r\n          temperature: data_current.main.temp,\r\n          city: data_current.name,\r\n          country: data_current.sys.country,\r\n          humidity: data_current.main.humidity,\r\n          description: data_current.weather[0].description,\r\n          forecast: chart_data,\r\n\t\t  t_min: t_min,\r\n\t\t  t_max: t_max,\r\n\t\t  error: \"\"\r\n        });\r\n      }\r\n      else{\r\n        this.setState({\r\n          temperature: undefined,\r\n          city: undefined,\r\n          country: undefined,\r\n          humidity: undefined,\r\n          description: undefined,\r\n          forecast: undefined,\r\n\t\t  t_min: 0,\r\n\t\t  t_max: 40,\r\n\t\t  error: \"Please enter the value.\"\r\n        });     \r\n      }\r\n    }\r\n    catch(e) {\r\n    console.log('error: ', e);  \r\n    }\r\n  }\r\n  \r\n  render(){\r\n    return (\r\n      <div className=\"column\">\r\n        <div className=\"panel-header\">\r\n          <Titles />\r\n        </div>\r\n\t\t<div className=\"form-control\">\r\n\t\t\t  <Forms getWeather={this.getWeather}/>\r\n\t\t</div>\r\n\t\t\t<div className=\"panel-body\">\r\n\t\t\t\t<div className=\"info\">\r\n\t\t\t\t  <Weather temperature={this.state.temperature}\r\n\t\t\t\t  city={this.state.city}\r\n\t\t\t\t  country={this.state.country}\r\n\t\t\t\t  humidity={this.state.humidity}\r\n\t\t\t\t  description={this.state.description}\r\n\t\t\t\t  error={this.state.error}\r\n\t\t\t\t  />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\t\t\t\r\n\t\t\t<LineChart t_min={this.state.t_min}\r\n\t\t\tt_max={this.state.t_max}\r\n\t\t\tforecast={this.state.forecast}\r\n\t\t\tcity={this.state.city}\r\n\t\t\t/>\r\n\t\t   <div className=\"footer\">\r\n\t\t\t\t<div className=\"copyright\">\r\n\t\t\t\t\t<span>© Copyright Patricia Dourado 2019.</span> \r\n\t\t\t\t</div>\t\t                  \r\n\t\t\t</div>  \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}